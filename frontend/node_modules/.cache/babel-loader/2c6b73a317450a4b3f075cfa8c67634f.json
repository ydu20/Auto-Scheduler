{"ast":null,"code":"import _slicedToArray from\"/Users/ydu25/Documents/Visual Studio/auto_schedule/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useEffect}from'react';import Grid from'./Grid';import Blocks from'./Blocks';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Schedule=function Schedule(_ref){var timeTables=_ref.timeTables;var position=0;var getBoundryTimes=function getBoundryTimes(timetable){var temp=Object.values(timetable[0].ids)[0][0];var min=parseFloat(temp[0].substring(1));var max=parseFloat(temp[1].substring(1));for(var i=0;i<timetable.length;i++){var sections=Object.values(timetable[i].ids);for(var j=0;j<sections.length;j++){for(var k=0;k<sections[j].length;k++){var start=parseFloat(sections[j][k][0].substring(1));if(start<min)min=start;var end=parseFloat(sections[j][k][1].substring(1));if(end>max)max=end;}}}console.log(min);console.log(max);return[min,max];};var startTime;var endTime;var _getBoundryTimes=getBoundryTimes(timeTables[0]);var _getBoundryTimes2=_slicedToArray(_getBoundryTimes,2);startTime=_getBoundryTimes2[0];endTime=_getBoundryTimes2[1];return/*#__PURE__*/_jsxs(\"div\",{className:\"schedule-container\",children:[/*#__PURE__*/_jsx(Grid,{startTime:startTime,endTime:endTime}),/*#__PURE__*/_jsx(Blocks,{startTime:startTime,endTime:endTime})]});};export default Schedule;","map":{"version":3,"sources":["/Users/ydu25/Documents/Visual Studio/auto_schedule/frontend/src/components/schedule/Schedule.js"],"names":["React","useEffect","Grid","Blocks","Schedule","timeTables","position","getBoundryTimes","timetable","temp","Object","values","ids","min","parseFloat","substring","max","i","length","sections","j","k","start","end","console","log","startTime","endTime"],"mappings":"iJAAA,MAAOA,CAAAA,KAAP,EAAeC,SAAf,KAA+B,OAA/B,CACA,MAAOC,CAAAA,IAAP,KAAiB,QAAjB,CACA,MAAOC,CAAAA,MAAP,KAAmB,UAAnB,C,wFAGA,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,MAAkB,IAAhBC,CAAAA,UAAgB,MAAhBA,UAAgB,CAC/B,GAAIC,CAAAA,QAAQ,CAAG,CAAf,CAEA,GAAMC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACC,SAAD,CAAe,CACnC,GAAIC,CAAAA,IAAI,CAAGC,MAAM,CAACC,MAAP,CAAcH,SAAS,CAAC,CAAD,CAAT,CAAaI,GAA3B,EAAgC,CAAhC,EAAmC,CAAnC,CAAX,CACA,GAAIC,CAAAA,GAAG,CAAGC,UAAU,CAACL,IAAI,CAAC,CAAD,CAAJ,CAAQM,SAAR,CAAkB,CAAlB,CAAD,CAApB,CACA,GAAIC,CAAAA,GAAG,CAAGF,UAAU,CAACL,IAAI,CAAC,CAAD,CAAJ,CAAQM,SAAR,CAAkB,CAAlB,CAAD,CAApB,CAEA,IAAK,GAAIE,CAAAA,CAAC,CAAG,CAAb,CAAgBA,CAAC,CAAGT,SAAS,CAACU,MAA9B,CAAsCD,CAAC,EAAvC,CAA2C,CACvC,GAAME,CAAAA,QAAQ,CAAGT,MAAM,CAACC,MAAP,CAAcH,SAAS,CAACS,CAAD,CAAT,CAAaL,GAA3B,CAAjB,CACA,IAAK,GAAIQ,CAAAA,CAAC,CAAG,CAAb,CAAgBA,CAAC,CAAGD,QAAQ,CAACD,MAA7B,CAAqCE,CAAC,EAAtC,CAAyC,CACrC,IAAK,GAAIC,CAAAA,CAAC,CAAG,CAAb,CAAgBA,CAAC,CAAGF,QAAQ,CAACC,CAAD,CAAR,CAAYF,MAAhC,CAAwCG,CAAC,EAAzC,CAA6C,CACzC,GAAMC,CAAAA,KAAK,CAAGR,UAAU,CAACK,QAAQ,CAACC,CAAD,CAAR,CAAYC,CAAZ,EAAe,CAAf,EAAkBN,SAAlB,CAA4B,CAA5B,CAAD,CAAxB,CACA,GAAIO,KAAK,CAAGT,GAAZ,CAAiBA,GAAG,CAAGS,KAAN,CACjB,GAAMC,CAAAA,GAAG,CAAGT,UAAU,CAACK,QAAQ,CAACC,CAAD,CAAR,CAAYC,CAAZ,EAAe,CAAf,EAAkBN,SAAlB,CAA4B,CAA5B,CAAD,CAAtB,CACA,GAAIQ,GAAG,CAAGP,GAAV,CAAeA,GAAG,CAAGO,GAAN,CAClB,CACJ,CACJ,CACDC,OAAO,CAACC,GAAR,CAAYZ,GAAZ,EACAW,OAAO,CAACC,GAAR,CAAYT,GAAZ,EAEA,MAAO,CAACH,GAAD,CAAMG,GAAN,CAAP,CACH,CApBD,CAsBA,GAAIU,CAAAA,SAAJ,CACA,GAAIC,CAAAA,OAAJ,CA1B+B,qBA4BRpB,eAAe,CAACF,UAAU,CAAC,CAAD,CAAX,CA5BP,0DA4B9BqB,SA5B8B,sBA4BnBC,OA5BmB,sBA8B/B,mBACA,aAAK,SAAS,CAAG,oBAAjB,wBACQ,KAAC,IAAD,EAAM,SAAS,CAAED,SAAjB,CAA4B,OAAO,CAAIC,OAAvC,EADR,cAEQ,KAAC,MAAD,EAAQ,SAAS,CAAED,SAAnB,CAA8B,OAAO,CAAIC,OAAzC,EAFR,GADA,CAMH,CApCD,CAsCA,cAAevB,CAAAA,QAAf","sourcesContent":["import React, {useEffect} from 'react'\nimport Grid from './Grid'\nimport Blocks from './Blocks'\n\n\nconst Schedule = ({timeTables}) => {\n    var position = 0\n\n    const getBoundryTimes = (timetable) => {\n        var temp = Object.values(timetable[0].ids)[0][0]\n        var min = parseFloat(temp[0].substring(1))\n        var max = parseFloat(temp[1].substring(1))\n\n        for (let i = 0; i < timetable.length; i++) {\n            const sections = Object.values(timetable[i].ids)\n            for (let j = 0; j < sections.length; j++){\n                for (let k = 0; k < sections[j].length; k++) {\n                    const start = parseFloat(sections[j][k][0].substring(1))\n                    if (start < min) min = start\n                    const end = parseFloat(sections[j][k][1].substring(1))\n                    if (end > max) max = end\n                }\n            }\n        }\n        console.log(min)\n        console.log(max)\n\n        return [min, max]\n    }\n\n    var startTime\n    var endTime\n    \n    [startTime, endTime] = getBoundryTimes(timeTables[0])\n\n    return (\n    <div className = \"schedule-container\">\n            <Grid startTime={startTime} endTime = {endTime}/>\n            <Blocks startTime={startTime} endTime = {endTime}/>\n    </div>\n    )\n}\n\nexport default Schedule;"]},"metadata":{},"sourceType":"module"}