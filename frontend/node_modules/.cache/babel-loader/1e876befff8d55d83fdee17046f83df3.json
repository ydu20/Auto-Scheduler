{"ast":null,"code":"import React from\"react\";import{jsx as _jsx}from\"react/jsx-runtime\";export default function Days(props){var offset=props.offset,weekend=props.weekend;var days=weekend?[\"MON\",\"TUE\",\"WED\",\"THU\",\"FRI\",\"SAT\",\"SUN\"]:[\"MON\",\"TUE\",\"WED\",\"THU\",\"FRI\"];var style={display:\"grid\",gridColumnStart:1+offset,gridColumnEnd:days.length+1+offset,gridRow:1,gridTemplateColumns:\"repeat(\".concat(days.length,\", 1fr)\"),textAlign:\"center\"};return/*#__PURE__*/_jsx(\"div\",{style:style,children:days.map(function(e){return/*#__PURE__*/_jsx(\"span\",{className:\"day\",children:e},e);})});}","map":{"version":3,"sources":["/Users/ydu25/Documents/Visual Studio/auto_schedule/frontend/src/components/schedule/Days.js"],"names":["React","Days","props","offset","weekend","days","style","display","gridColumnStart","gridColumnEnd","length","gridRow","gridTemplateColumns","textAlign","map","e"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,C,2CAGA,cAAe,SAASC,CAAAA,IAAT,CAAcC,KAAd,CAAqB,CAChC,GAAQC,CAAAA,MAAR,CAA4BD,KAA5B,CAAQC,MAAR,CAAgBC,OAAhB,CAA4BF,KAA5B,CAAgBE,OAAhB,CACA,GAAMC,CAAAA,IAAI,CAAGD,OAAO,CAAG,CAAC,KAAD,CAAQ,KAAR,CAAe,KAAf,CAAsB,KAAtB,CAA6B,KAA7B,CAAoC,KAApC,CAA2C,KAA3C,CAAH,CAAuD,CAAC,KAAD,CAAQ,KAAR,CAAe,KAAf,CAAsB,KAAtB,CAA6B,KAA7B,CAA3E,CACA,GAAME,CAAAA,KAAK,CAAG,CACVC,OAAO,CAAE,MADC,CAEVC,eAAe,CAAE,EAAIL,MAFX,CAGVM,aAAa,CAAEJ,IAAI,CAACK,MAAL,CAAc,CAAd,CAAkBP,MAHvB,CAIVQ,OAAO,CAAE,CAJC,CAKVC,mBAAmB,kBAAYP,IAAI,CAACK,MAAjB,UALT,CAMVG,SAAS,CAAE,QAND,CAAd,CAQA,mBACI,YAAK,KAAK,CAAEP,KAAZ,UACKD,IAAI,CAACS,GAAL,CAAS,SAAAC,CAAC,qBAAI,aAAM,SAAS,CAAC,KAAhB,UAA+BA,CAA/B,EAA2BA,CAA3B,CAAJ,EAAV,CADL,EADJ,CAKH","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nexport default function Days(props) {\n    const { offset, weekend } = props;\n    const days = weekend ? [\"MON\", \"TUE\", \"WED\", \"THU\", \"FRI\", \"SAT\", \"SUN\"] : [\"MON\", \"TUE\", \"WED\", \"THU\", \"FRI\"];\n    const style = {\n        display: \"grid\",\n        gridColumnStart: 1 + offset,\n        gridColumnEnd: days.length + 1 + offset,\n        gridRow: 1,\n        gridTemplateColumns: `repeat(${days.length}, 1fr)`,\n        textAlign: \"center\",\n    };\n    return (\n        <div style={style}>\n            {days.map(e => <span className=\"day\" key={e}>{e}</span>)}\n        </div>\n    );\n}\n\nDays.propTypes = {\n    offset: PropTypes.number,\n    weekend: PropTypes.bool,\n};\n"]},"metadata":{},"sourceType":"module"}