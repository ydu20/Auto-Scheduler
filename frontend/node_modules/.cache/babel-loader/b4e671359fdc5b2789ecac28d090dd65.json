{"ast":null,"code":"import _slicedToArray from\"/Users/ydu25/Documents/Visual Studio/auto_schedule/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useEffect}from'react';import Grid from'./Grid';import Blocks from'./Blocks';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Schedule=function Schedule(_ref){var timetables=_ref.timetables;var position=0;var getBoundryTimes=function getBoundryTimes(timetable){var min=9;var max=16;for(var i=0;i<timetable.length;i++){var sections=Object.values(timetable[i].ids);for(var j=0;j<sections.length;j++){for(var k=0;k<sections[j].length;k++){var start=parseFloat(sections[j][k][0].substring(1));if(start<min)min=start;var end=parseFloat(sections[j][k][1].substring(1));if(end>max)max=end;}}}console.log(min);console.log(max);return[min,max];};var startTime;var endTime;if(timetables.length>0){var _getBoundryTimes=getBoundryTimes(timetables[0]);var _getBoundryTimes2=_slicedToArray(_getBoundryTimes,2);startTime=_getBoundryTimes2[0];endTime=_getBoundryTimes2[1];}else{startTime=10;endTime=17;}return/*#__PURE__*/_jsxs(\"div\",{className:\"schedule-container\",children:[/*#__PURE__*/_jsx(Grid,{startTime:startTime,endTime:endTime}),/*#__PURE__*/_jsx(Blocks,{startTime:startTime,endTime:endTime,timetable:timetables[0]})]});};export default Schedule;","map":{"version":3,"sources":["/Users/ydu25/Documents/Visual Studio/auto_schedule/frontend/src/components/schedule/Schedule.js"],"names":["React","useEffect","Grid","Blocks","Schedule","timetables","position","getBoundryTimes","timetable","min","max","i","length","sections","Object","values","ids","j","k","start","parseFloat","substring","end","console","log","startTime","endTime"],"mappings":"iJAAA,MAAOA,CAAAA,KAAP,EAAeC,SAAf,KAA+B,OAA/B,CACA,MAAOC,CAAAA,IAAP,KAAiB,QAAjB,CACA,MAAOC,CAAAA,MAAP,KAAmB,UAAnB,C,wFAGA,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,MAAkB,IAAhBC,CAAAA,UAAgB,MAAhBA,UAAgB,CAC/B,GAAIC,CAAAA,QAAQ,CAAG,CAAf,CAEA,GAAMC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACC,SAAD,CAAe,CACnC,GAAIC,CAAAA,GAAG,CAAG,CAAV,CACA,GAAIC,CAAAA,GAAG,CAAG,EAAV,CAEA,IAAK,GAAIC,CAAAA,CAAC,CAAG,CAAb,CAAgBA,CAAC,CAAGH,SAAS,CAACI,MAA9B,CAAsCD,CAAC,EAAvC,CAA2C,CACvC,GAAIE,CAAAA,QAAQ,CAAGC,MAAM,CAACC,MAAP,CAAcP,SAAS,CAACG,CAAD,CAAT,CAAaK,GAA3B,CAAf,CACA,IAAK,GAAIC,CAAAA,CAAC,CAAG,CAAb,CAAgBA,CAAC,CAAGJ,QAAQ,CAACD,MAA7B,CAAqCK,CAAC,EAAtC,CAAyC,CACrC,IAAK,GAAIC,CAAAA,CAAC,CAAG,CAAb,CAAgBA,CAAC,CAAGL,QAAQ,CAACI,CAAD,CAAR,CAAYL,MAAhC,CAAwCM,CAAC,EAAzC,CAA6C,CACzC,GAAIC,CAAAA,KAAK,CAAGC,UAAU,CAACP,QAAQ,CAACI,CAAD,CAAR,CAAYC,CAAZ,EAAe,CAAf,EAAkBG,SAAlB,CAA4B,CAA5B,CAAD,CAAtB,CACA,GAAIF,KAAK,CAAGV,GAAZ,CAAiBA,GAAG,CAAGU,KAAN,CACjB,GAAIG,CAAAA,GAAG,CAAGF,UAAU,CAACP,QAAQ,CAACI,CAAD,CAAR,CAAYC,CAAZ,EAAe,CAAf,EAAkBG,SAAlB,CAA4B,CAA5B,CAAD,CAApB,CACA,GAAIC,GAAG,CAAGZ,GAAV,CAAeA,GAAG,CAAGY,GAAN,CAClB,CACJ,CACJ,CACDC,OAAO,CAACC,GAAR,CAAYf,GAAZ,EACAc,OAAO,CAACC,GAAR,CAAYd,GAAZ,EAEA,MAAO,CAACD,GAAD,CAAMC,GAAN,CAAP,CACH,CAnBD,CAqBA,GAAIe,CAAAA,SAAJ,CACA,GAAIC,CAAAA,OAAJ,CAEA,GAAIrB,UAAU,CAACO,MAAX,CAAoB,CAAxB,CAA2B,sBACAL,eAAe,CAACF,UAAU,CAAC,CAAD,CAAX,CADf,0DACtBoB,SADsB,sBACXC,OADW,sBAE1B,CAFD,IAEO,CACHD,SAAS,CAAG,EAAZ,CACAC,OAAO,CAAG,EAAV,CACH,CAED,mBACA,aAAK,SAAS,CAAG,oBAAjB,wBACQ,KAAC,IAAD,EAAM,SAAS,CAAED,SAAjB,CAA4B,OAAO,CAAIC,OAAvC,EADR,cAEQ,KAAC,MAAD,EAAQ,SAAS,CAAED,SAAnB,CAA8B,OAAO,CAAIC,OAAzC,CAAkD,SAAS,CAAIrB,UAAU,CAAC,CAAD,CAAzE,EAFR,GADA,CAMH,CAxCD,CA0CA,cAAeD,CAAAA,QAAf","sourcesContent":["import React, {useEffect} from 'react'\nimport Grid from './Grid'\nimport Blocks from './Blocks'\n\n\nconst Schedule = ({timetables}) => {\n    var position = 0\n\n    const getBoundryTimes = (timetable) => {\n        var min = 9\n        var max = 16\n\n        for (let i = 0; i < timetable.length; i++) {\n            let sections = Object.values(timetable[i].ids)\n            for (let j = 0; j < sections.length; j++){\n                for (let k = 0; k < sections[j].length; k++) {\n                    let start = parseFloat(sections[j][k][0].substring(1))\n                    if (start < min) min = start\n                    let end = parseFloat(sections[j][k][1].substring(1))\n                    if (end > max) max = end\n                }\n            }\n        }\n        console.log(min)\n        console.log(max)\n\n        return [min, max]\n    }\n\n    var startTime\n    var endTime\n    \n    if (timetables.length > 0) {\n        [startTime, endTime] = getBoundryTimes(timetables[0])\n    } else {\n        startTime = 10\n        endTime = 17\n    }\n    \n    return (\n    <div className = \"schedule-container\">\n            <Grid startTime={startTime} endTime = {endTime}/>\n            <Blocks startTime={startTime} endTime = {endTime} timetable = {timetables[0]}/>\n    </div>\n    )\n}\n\nexport default Schedule;"]},"metadata":{},"sourceType":"module"}