{"ast":null,"code":"import React,{useEffect}from'react';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Schedule=function Schedule(_ref){var timeTables=_ref.timeTables;var position=0;var getBoundryTimes=function getBoundryTimes(timetable){var temp=Object.values(timetable[0].ids)[0][0];var min=parseFloat(temp[0].substring(1));var max=parseFloat(temp[1].substring(1));for(var i=0;i<timetable.length;i++){var sections=Object.values(timetable[i].ids);for(var j=0;j<sections.length;j++){for(var k=0;k<sections[j].length;k++){var start=parseFloat(sections[j][k][0].substring(1));if(start<min)min=start;var end=parseFloat(sections[j][k][1].substring(1));if(end>max)max=end;}}}console.log(min);console.log(max);return[min,max];};var generateGridHeader=function generateGridHeader(){return[/*#__PURE__*/_jsx(\"div\",{className:\"grid-header\"}),/*#__PURE__*/_jsx(\"h3\",{className:\"grid-header\",children:\"Mon\"}),/*#__PURE__*/_jsx(\"h3\",{className:\"grid-header\",children:\"Tue\"}),/*#__PURE__*/_jsx(\"h3\",{className:\"grid-header\",children:\"Wed\"}),/*#__PURE__*/_jsx(\"h3\",{className:\"grid-header\",children:\"Thu\"}),/*#__PURE__*/_jsx(\"h3\",{className:\"grid-header\",children:\"Fri\"})];};var calculateTime=function calculateTime(time){if(time<=12){return time+\"AM\";}else{return time-12+\"PM\";}};var generateGridBody=function generateGridBody(numRows,numCols,startTime){var cells=[];for(var i=0;i<numRows-2;i++){cells.push(/*#__PURE__*/_jsx(\"div\",{className:\"grid-sidebar\",children:calculateTime(Math.floor(startTime)+1+i)}));for(var j=0;j<numCols-1;j++){cells.push(/*#__PURE__*/_jsx(\"div\",{className:\"grid-box\"}));}}for(var _i=0;_i<numCols;_i++){cells.push(/*#__PURE__*/_jsx(\"div\",{className:\"grid-box-bottom\"}));}return cells;};var gridStyle=function gridStyle(numRows,numCols){return{gridTemplateColumns:'repeat('+numCols+',1fr)',gridTemplateRows:'repeat('+numRows+',1fr)'};};var generateGrid=function generateGrid(numRows,numCols,startTime){return/*#__PURE__*/_jsxs(\"div\",{className:\"schedule-grid\",style:gridStyle(numRows,numCols),children:[generateGridHeader(),generateGridBody(numRows,numCols,startTime)]});};var generateBlocks=function generateBlocks(numRows,numCols){return/*#__PURE__*/_jsx(\"div\",{className:\"schedule-blocks\",style:gridStyle(numRows,numCols),children:/*#__PURE__*/_jsx(\"div\",{className:\"class-block\",style:{gridColumn:2,gridRow:2,backgroundColor:'#f5f6f7'},children:\"HIIII\"})});};// var st = getBoundryTimes(timeTables[0])[0]\n// var et = getBoundryTimes(timeTables[0])[0]\nvar st=10;var et=15;var nc=6;var nr=Math.ceil(et)-Math.floor(st)+1;return/*#__PURE__*/_jsxs(\"div\",{className:\"schedule-container\",children:[generateGrid(nr,nc,st),generateBlocks(nr,nc)]});};export default Schedule;","map":{"version":3,"sources":["/Users/ydu25/Documents/Visual Studio/auto_schedule/frontend/src/components/schedule/Schedule.js"],"names":["React","useEffect","Schedule","timeTables","position","getBoundryTimes","timetable","temp","Object","values","ids","min","parseFloat","substring","max","i","length","sections","j","k","start","end","console","log","generateGridHeader","calculateTime","time","generateGridBody","numRows","numCols","startTime","cells","push","Math","floor","gridStyle","gridTemplateColumns","gridTemplateRows","generateGrid","generateBlocks","gridColumn","gridRow","backgroundColor","st","et","nc","nr","ceil"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,EAAeC,SAAf,KAA+B,OAA/B,C,wFAGA,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,MAAkB,IAAhBC,CAAAA,UAAgB,MAAhBA,UAAgB,CAC/B,GAAIC,CAAAA,QAAQ,CAAG,CAAf,CAGA,GAAMC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACC,SAAD,CAAe,CACnC,GAAIC,CAAAA,IAAI,CAAGC,MAAM,CAACC,MAAP,CAAcH,SAAS,CAAC,CAAD,CAAT,CAAaI,GAA3B,EAAgC,CAAhC,EAAmC,CAAnC,CAAX,CACA,GAAIC,CAAAA,GAAG,CAAGC,UAAU,CAACL,IAAI,CAAC,CAAD,CAAJ,CAAQM,SAAR,CAAkB,CAAlB,CAAD,CAApB,CACA,GAAIC,CAAAA,GAAG,CAAGF,UAAU,CAACL,IAAI,CAAC,CAAD,CAAJ,CAAQM,SAAR,CAAkB,CAAlB,CAAD,CAApB,CAEA,IAAK,GAAIE,CAAAA,CAAC,CAAG,CAAb,CAAgBA,CAAC,CAAGT,SAAS,CAACU,MAA9B,CAAsCD,CAAC,EAAvC,CAA2C,CACvC,GAAME,CAAAA,QAAQ,CAAGT,MAAM,CAACC,MAAP,CAAcH,SAAS,CAACS,CAAD,CAAT,CAAaL,GAA3B,CAAjB,CACA,IAAK,GAAIQ,CAAAA,CAAC,CAAG,CAAb,CAAgBA,CAAC,CAAGD,QAAQ,CAACD,MAA7B,CAAqCE,CAAC,EAAtC,CAAyC,CACrC,IAAK,GAAIC,CAAAA,CAAC,CAAG,CAAb,CAAgBA,CAAC,CAAGF,QAAQ,CAACC,CAAD,CAAR,CAAYF,MAAhC,CAAwCG,CAAC,EAAzC,CAA6C,CACzC,GAAMC,CAAAA,KAAK,CAAGR,UAAU,CAACK,QAAQ,CAACC,CAAD,CAAR,CAAYC,CAAZ,EAAe,CAAf,EAAkBN,SAAlB,CAA4B,CAA5B,CAAD,CAAxB,CACA,GAAIO,KAAK,CAAGT,GAAZ,CAAiBA,GAAG,CAAGS,KAAN,CACjB,GAAMC,CAAAA,GAAG,CAAGT,UAAU,CAACK,QAAQ,CAACC,CAAD,CAAR,CAAYC,CAAZ,EAAe,CAAf,EAAkBN,SAAlB,CAA4B,CAA5B,CAAD,CAAtB,CACA,GAAIQ,GAAG,CAAGP,GAAV,CAAeA,GAAG,CAAGO,GAAN,CAClB,CACJ,CACJ,CACDC,OAAO,CAACC,GAAR,CAAYZ,GAAZ,EACAW,OAAO,CAACC,GAAR,CAAYT,GAAZ,EAEA,MAAO,CAACH,GAAD,CAAMG,GAAN,CAAP,CACH,CApBD,CAuBA,GAAMU,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,EAAM,CAC7B,MACI,cAAC,YAAK,SAAS,CAAG,aAAjB,EAAD,cACA,WAAI,SAAS,CAAG,aAAhB,iBADA,cAEA,WAAI,SAAS,CAAG,aAAhB,iBAFA,cAGA,WAAI,SAAS,CAAG,aAAhB,iBAHA,cAIA,WAAI,SAAS,CAAG,aAAhB,iBAJA,cAKA,WAAI,SAAS,CAAG,aAAhB,iBALA,CADJ,CAQH,CATD,CAWA,GAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAACC,IAAD,CAAU,CAC5B,GAAIA,IAAI,EAAI,EAAZ,CAAgB,CACZ,MAAQA,CAAAA,IAAI,CAAG,IAAf,CACH,CAFD,IAEO,CACH,MAASA,CAAAA,IAAI,CAAC,EAAN,CAAY,IAApB,CACH,CACJ,CAND,CAQA,GAAMC,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,CAACC,OAAD,CAAUC,OAAV,CAAmBC,SAAnB,CAAiC,CACtD,GAAIC,CAAAA,KAAK,CAAG,EAAZ,CACA,IAAK,GAAIhB,CAAAA,CAAC,CAAG,CAAb,CAAgBA,CAAC,CAAIa,OAAO,CAAC,CAA7B,CAAiCb,CAAC,EAAlC,CAAsC,CAClCgB,KAAK,CAACC,IAAN,cAAW,YAAK,SAAS,CAAG,cAAjB,UACNP,aAAa,CAACQ,IAAI,CAACC,KAAL,CAAWJ,SAAX,EAAwB,CAAxB,CAA4Bf,CAA7B,CADP,EAAX,EAGA,IAAK,GAAIG,CAAAA,CAAC,CAAG,CAAb,CAAgBA,CAAC,CAAGW,OAAO,CAAC,CAA5B,CAA+BX,CAAC,EAAhC,CAAoC,CAChCa,KAAK,CAACC,IAAN,cAAW,YAAK,SAAS,CAAG,UAAjB,EAAX,EACH,CACJ,CACD,IAAK,GAAIjB,CAAAA,EAAC,CAAG,CAAb,CAAgBA,EAAC,CAAIc,OAArB,CAA+Bd,EAAC,EAAhC,CAAoC,CAChCgB,KAAK,CAACC,IAAN,cAAW,YAAK,SAAS,CAAG,iBAAjB,EAAX,EACH,CACD,MAAOD,CAAAA,KAAP,CACH,CAdD,CAgBA,GAAMI,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,CAACP,OAAD,CAAUC,OAAV,CAAqB,CACnC,MAAO,CACHO,mBAAmB,CAAE,UAAYP,OAAZ,CAAsB,OADxC,CAEPQ,gBAAgB,CAAE,UAAYT,OAAZ,CAAsB,OAFjC,CAAP,CAIH,CALD,CAOA,GAAMU,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACV,OAAD,CAAUC,OAAV,CAAmBC,SAAnB,CAAiC,CAElD,mBACI,aAAK,SAAS,CAAG,eAAjB,CACI,KAAK,CAAIK,SAAS,CAACP,OAAD,CAAUC,OAAV,CADtB,WAESL,kBAAkB,EAF3B,CAGSG,gBAAgB,CAACC,OAAD,CAAUC,OAAV,CAAmBC,SAAnB,CAHzB,GADJ,CAOH,CATD,CAWA,GAAMS,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,CAACX,OAAD,CAAUC,OAAV,CAAsB,CAEzC,mBACI,YAAK,SAAS,CAAG,iBAAjB,CACI,KAAK,CAAIM,SAAS,CAACP,OAAD,CAAUC,OAAV,CADtB,uBAEQ,YAAK,SAAS,CAAG,aAAjB,CAA+B,KAAK,CAAI,CAACW,UAAU,CAAE,CAAb,CAAgBC,OAAO,CAAE,CAAzB,CAA4BC,eAAe,CAAE,SAA7C,CAAxC,mBAFR,EADJ,CASH,CAXD,CAaA;AACA;AAEA,GAAIC,CAAAA,EAAE,CAAG,EAAT,CAEA,GAAIC,CAAAA,EAAE,CAAG,EAAT,CAEA,GAAIC,CAAAA,EAAE,CAAG,CAAT,CACA,GAAIC,CAAAA,EAAE,CAAGb,IAAI,CAACc,IAAL,CAAUH,EAAV,EAAgBX,IAAI,CAACC,KAAL,CAAWS,EAAX,CAAhB,CAAiC,CAA1C,CAEA,mBACA,aAAK,SAAS,CAAG,oBAAjB,WACSL,YAAY,CAACQ,EAAD,CAAKD,EAAL,CAASF,EAAT,CADrB,CAESJ,cAAc,CAACO,EAAD,CAAKD,EAAL,CAFvB,GADA,CAMH,CA7GD,CA+GA,cAAe3C,CAAAA,QAAf","sourcesContent":["import React, {useEffect} from 'react'\n\n\nconst Schedule = ({timeTables}) => {\n    var position = 0\n\n\n    const getBoundryTimes = (timetable) => {\n        var temp = Object.values(timetable[0].ids)[0][0]\n        var min = parseFloat(temp[0].substring(1))\n        var max = parseFloat(temp[1].substring(1))\n\n        for (let i = 0; i < timetable.length; i++) {\n            const sections = Object.values(timetable[i].ids)\n            for (let j = 0; j < sections.length; j++){\n                for (let k = 0; k < sections[j].length; k++) {\n                    const start = parseFloat(sections[j][k][0].substring(1))\n                    if (start < min) min = start\n                    const end = parseFloat(sections[j][k][1].substring(1))\n                    if (end > max) max = end\n                }\n            }\n        }\n        console.log(min)\n        console.log(max)\n\n        return [min, max]\n    }\n\n\n    const generateGridHeader = () => {\n        return (\n            [<div className = \"grid-header\"/>,\n            <h3 className = \"grid-header\">Mon</h3>,\n            <h3 className = \"grid-header\">Tue</h3>,\n            <h3 className = \"grid-header\">Wed</h3>,\n            <h3 className = \"grid-header\">Thu</h3>,\n            <h3 className = \"grid-header\">Fri</h3>]\n        )\n    }\n\n    const calculateTime = (time) => {\n        if (time <= 12) {\n            return (time + \"AM\")\n        } else {\n            return ((time-12) + \"PM\")\n        }\n    }\n\n    const generateGridBody = (numRows, numCols, startTime) => {\n        var cells = []\n        for (let i = 0; i < (numRows-2); i++) {\n            cells.push(<div className = \"grid-sidebar\">\n                {calculateTime(Math.floor(startTime) + 1 + i)}\n            </div>)\n            for (let j = 0; j < numCols-1; j++) {\n                cells.push(<div className = \"grid-box\" />)\n            }\n        }\n        for (let i = 0; i < (numCols); i++) {\n            cells.push(<div className = \"grid-box-bottom\"/>)\n        }\n        return cells\n    }\n\n    const gridStyle = (numRows, numCols) =>{\n        return {\n            gridTemplateColumns: 'repeat(' + numCols + ',1fr)',\n        gridTemplateRows: 'repeat(' + numRows + ',1fr)'\n        }\n    };\n\n    const generateGrid = (numRows, numCols, startTime) => {\n\n        return (\n            <div className = \"schedule-grid\" \n                style = {gridStyle(numRows, numCols)}>\n                    {generateGridHeader()}\n                    {generateGridBody(numRows, numCols, startTime)}\n            </div>\n        )\n    }\n\n    const generateBlocks = (numRows, numCols) => {\n\n        return (\n            <div className = \"schedule-blocks\"\n                style = {gridStyle(numRows, numCols)}>\n                    <div className = \"class-block\" style = {{gridColumn: 2, gridRow: 2, backgroundColor: '#f5f6f7'}}>\n                        HIIII\n                    </div>\n            </div>\n        )\n\n    }\n\n    // var st = getBoundryTimes(timeTables[0])[0]\n    // var et = getBoundryTimes(timeTables[0])[0]\n\n    var st = 10\n\n    var et = 15\n\n    var nc = 6\n    var nr = Math.ceil(et) - Math.floor(st) + 1\n\n    return (\n    <div className = \"schedule-container\">\n            {generateGrid(nr, nc, st)}\n            {generateBlocks(nr, nc)}\n    </div>\n    )\n}\n\nexport default Schedule;"]},"metadata":{},"sourceType":"module"}