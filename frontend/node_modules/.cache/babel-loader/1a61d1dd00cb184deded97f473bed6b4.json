{"ast":null,"code":"import _slicedToArray from\"/Users/ydu25/Documents/Visual Studio/auto_schedule/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React from'react';import{jsx as _jsx}from\"react/jsx-runtime\";var Blocks=function Blocks(_ref){var startTime=_ref.startTime,endTime=_ref.endTime,timetable=_ref.timetable;// 1. find color\n// 2. find position\n// 3. find length\nvar numRows=(Math.ceil(endTime)-Math.floor(startTime)+1)*4;var numCols=6;var gridStyle=function gridStyle(){return{gridTemplateColumns:'repeat('+numCols+',1fr)',gridTemplateRows:'repeat('+numRows+',1fr)'};};var getColor=function getColor(x){var colors=[\"blue\",\"red\",\"aqua\",\"orange\",\"green\",\"pink\",\"sea\",\"indigo\"];return colors[x%8];};var dayToPos=function dayToPos(day){if(day==='M'){return 2;}else if(day==='T'){return 3;}else if(day==='W'){return 4;}else if(day==='R'){return 5;}else{return 6;}};var timeToPos=function timeToPos(time){console.log(\"TIME: \"+time);var hour=parseInt(Math.floor(time));console.log(hour);console.log(time-hour);var frac=Math.round((time-hour)/0.6*4);console.log(frac);return 5+(hour-Math.floor(startTime))*4+frac;};var getGridRow=function getGridRow(start,end){var returnStr=timeToPos(start).toString()+\"/\"+timeToPos(end).toString();console.log(returnStr);return returnStr;};var generateBlocks=function generateBlocks(){var blocks=[];for(var i=0;i<timetable.length;i++){var color=getColor(i);var sections=Object.values(timetable[i].ids);for(var _i=0,_Object$entries=Object.entries(timetable[i].ids);_i<_Object$entries.length;_i++){var _Object$entries$_i=_slicedToArray(_Object$entries[_i],2),key=_Object$entries$_i[0],value=_Object$entries$_i[1];for(var k=0;k<value.length;k++){var day=value[k][0][0];var start=parseFloat(value[k][0].substring(1));var end=parseFloat(value[k][1].substring(1));var block=/*#__PURE__*/_jsx(\"div\",{className:\"class-block\",style:{gridColumn:dayToPos(day),gridRow:getGridRow(start,end),backgroundColor:color},children:key});blocks.push(block);}}}return blocks;};return/*#__PURE__*/_jsx(\"div\",{className:\"schedule-blocks\",style:gridStyle(numRows,numCols),children:generateBlocks()});};export default Blocks;","map":{"version":3,"sources":["/Users/ydu25/Documents/Visual Studio/auto_schedule/frontend/src/components/schedule/Blocks.js"],"names":["React","Blocks","startTime","endTime","timetable","numRows","Math","ceil","floor","numCols","gridStyle","gridTemplateColumns","gridTemplateRows","getColor","x","colors","dayToPos","day","timeToPos","time","console","log","hour","parseInt","frac","round","getGridRow","start","end","returnStr","toString","generateBlocks","blocks","i","length","color","sections","Object","values","ids","entries","key","value","k","parseFloat","substring","block","gridColumn","gridRow","backgroundColor","push"],"mappings":"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","sourcesContent":["import React from 'react'\n\n\nconst Blocks = ({startTime, endTime, timetable}) => {\n\n    // 1. find color\n    // 2. find position\n    // 3. find length\n\n    var numRows = (Math.ceil(endTime) - Math.floor(startTime) + 1) * 4\n    const numCols = 6\n\n    const gridStyle = () => {\n        return {\n            gridTemplateColumns: 'repeat(' + numCols + ',1fr)',\n        gridTemplateRows: 'repeat(' + numRows + ',1fr)'\n        }\n    };\n\n    const getColor = (x) => {\n        const colors = [\"blue\", \"red\", \"aqua\", \"orange\", \"green\", \"pink\", \"sea\", \"indigo\"];\n        return colors[x % 8]\n    }\n\n    const dayToPos = (day) => {\n        if (day === 'M') {\n            return 2\n        } else if (day === 'T') {\n            return 3\n        } else if (day === 'W') {\n            return 4\n        } else if (day === 'R') {\n            return 5\n        } else {\n            return 6\n        }\n    }\n\n    const timeToPos = (time) => {\n        console.log(\"TIME: \" + time)\n        let hour = parseInt(Math.floor(time))\n        console.log(hour)\n        console.log(time-hour)\n        let frac = Math.round((time-hour) / 0.6 * 4)\n        console.log(frac)\n        return 5 + (hour-Math.floor(startTime)) * 4 + frac\n    }\n\n    const getGridRow = (start, end) => {\n        let returnStr = timeToPos(start).toString() + \"/\" + timeToPos(end).toString()\n        console.log(returnStr)\n        return returnStr\n    }\n\n    const generateBlocks = () => {\n        let blocks = []\n        for (let i = 0; i < timetable.length; i++) {\n            let color = getColor(i)\n            let sections = Object.values(timetable[i].ids)\n            for (const [key, value] of Object.entries(timetable[i].ids)) {\n                for (let k = 0; k < value.length; k++) {\n                    let day = value[k][0][0]\n                    let start = parseFloat(value[k][0].substring(1))\n                    let end = parseFloat(value[k][1].substring(1))\n                    let block = <div className = \"class-block\" style = {{\n                        gridColumn: dayToPos(day), gridRow: getGridRow(start, end), backgroundColor: color}}>\n                        {key}\n                    </div>\n                    blocks.push(block)\n                }\n            }\n        }\n        return blocks\n    }\n\n    return (\n        <div className = \"schedule-blocks\"\n        style = {gridStyle(numRows, numCols)}>\n            {/* <div className = \"class-block\" style = {{gridColumn: 2, gridRow: 3, backgroundColor: '#f5f6f7'}}>\n                HIIII\n            </div> */}\n            {generateBlocks()}\n        </div>\n    )\n}\n\nexport default Blocks;"]},"metadata":{},"sourceType":"module"}