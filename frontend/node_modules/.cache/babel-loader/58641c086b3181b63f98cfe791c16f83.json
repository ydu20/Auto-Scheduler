{"ast":null,"code":"import React from\"react\";import{jsx as _jsx}from\"react/jsx-runtime\";export default function Times(props){var startTime=props.startTime,endTime=props.endTime,offset=props.offset,numRow=props.numRow;var timestamps=[];var intToTime=function intToTime(t){var hour=Math.floor(t%12);var min=t%1*60;var meridian=t<12?\"AM\":\"PM\";if(hour===0){hour=12;}if(min===0){return\"\".concat(hour,\" \").concat(meridian);}return\"\".concat(hour,\":\").concat(min,\" \").concat(meridian);};for(var i=Math.ceil(startTime);i<Math.floor(endTime);i+=1){timestamps.push(/*#__PURE__*/_jsx(\"span\",{className:\"time\",style:{gridRow:(i-startTime)*2+1,gridColumn:1},children:intToTime(i)},i));}var style={display:\"grid\",gridTemplateRows:\"repeat(\".concat(numRow-1,\", 1fr)\"),gridColumn:1,gridRowStart:1+offset,gridRowEnd:numRow+1,position:\"relative\"};return/*#__PURE__*/_jsx(\"div\",{style:style,children:timestamps});}","map":{"version":3,"sources":["/Users/ydu25/Documents/Visual Studio/auto_schedule/frontend/src/components/schedule/Times.js"],"names":["React","Times","props","startTime","endTime","offset","numRow","timestamps","intToTime","t","hour","Math","floor","min","meridian","i","ceil","push","gridRow","gridColumn","style","display","gridTemplateRows","gridRowStart","gridRowEnd","position"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,C,2CAGA,cAAe,SAASC,CAAAA,KAAT,CAAeC,KAAf,CAAsB,CACjC,GACIC,CAAAA,SADJ,CAEID,KAFJ,CACIC,SADJ,CACeC,OADf,CAEIF,KAFJ,CACeE,OADf,CACwBC,MADxB,CAEIH,KAFJ,CACwBG,MADxB,CACgCC,MADhC,CAEIJ,KAFJ,CACgCI,MADhC,CAGA,GAAMC,CAAAA,UAAU,CAAG,EAAnB,CAEA,GAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,CAACC,CAAD,CAAO,CACrB,GAAIC,CAAAA,IAAI,CAAGC,IAAI,CAACC,KAAL,CAAWH,CAAC,CAAG,EAAf,CAAX,CACA,GAAMI,CAAAA,GAAG,CAAIJ,CAAC,CAAG,CAAL,CAAU,EAAtB,CACA,GAAMK,CAAAA,QAAQ,CAAGL,CAAC,CAAG,EAAJ,CAAS,IAAT,CAAgB,IAAjC,CACA,GAAIC,IAAI,GAAK,CAAb,CAAgB,CACZA,IAAI,CAAG,EAAP,CACH,CACD,GAAIG,GAAG,GAAK,CAAZ,CAAe,CACX,gBAAUH,IAAV,aAAkBI,QAAlB,EACH,CACD,gBAAUJ,IAAV,aAAkBG,GAAlB,aAAyBC,QAAzB,EACH,CAXD,CAaA,IAAK,GAAIC,CAAAA,CAAC,CAAGJ,IAAI,CAACK,IAAL,CAAUb,SAAV,CAAb,CAAmCY,CAAC,CAAGJ,IAAI,CAACC,KAAL,CAAWR,OAAX,CAAvC,CAA4DW,CAAC,EAAI,CAAjE,CAAoE,CAChER,UAAU,CAACU,IAAX,cACI,aACI,SAAS,CAAC,MADd,CAEI,KAAK,CAAE,CACHC,OAAO,CAAG,CAACH,CAAC,CAAGZ,SAAL,EAAkB,CAAnB,CAAwB,CAD9B,CAEHgB,UAAU,CAAE,CAFT,CAFX,UAQKX,SAAS,CAACO,CAAD,CARd,EAMSA,CANT,CADJ,EAYH,CAED,GAAMK,CAAAA,KAAK,CAAG,CACVC,OAAO,CAAE,MADC,CAEVC,gBAAgB,kBAAYhB,MAAM,CAAG,CAArB,UAFN,CAGVa,UAAU,CAAE,CAHF,CAIVI,YAAY,CAAE,EAAIlB,MAJR,CAKVmB,UAAU,CAAElB,MAAM,CAAG,CALX,CAMVmB,QAAQ,CAAE,UANA,CAAd,CAQA,mBACI,YAAK,KAAK,CAAEL,KAAZ,UACKb,UADL,EADJ,CAKH","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nexport default function Times(props) {\n    const {\n        startTime, endTime, offset, numRow,\n    } = props;\n    const timestamps = [];\n\n    const intToTime = (t) => {\n        let hour = Math.floor(t % 12);\n        const min = (t % 1) * 60;\n        const meridian = t < 12 ? \"AM\" : \"PM\";\n        if (hour === 0) {\n            hour = 12;\n        }\n        if (min === 0) {\n            return `${hour} ${meridian}`;\n        }\n        return `${hour}:${min} ${meridian}`;\n    };\n\n    for (let i = Math.ceil(startTime); i < Math.floor(endTime); i += 1) {\n        timestamps.push((\n            <span\n                className=\"time\"\n                style={{\n                    gridRow: ((i - startTime) * 2) + 1,\n                    gridColumn: 1,\n                }}\n                key={i}\n            >\n                {intToTime(i)}\n            </span>\n        ));\n    }\n\n    const style = {\n        display: \"grid\",\n        gridTemplateRows: `repeat(${numRow - 1}, 1fr)`,\n        gridColumn: 1,\n        gridRowStart: 1 + offset,\n        gridRowEnd: numRow + 1,\n        position: \"relative\",\n    };\n    return (\n        <div style={style}>\n            {timestamps}\n        </div>\n    );\n}\n\nTimes.propTypes = {\n    startTime: PropTypes.number,\n    endTime: PropTypes.number,\n    offset: PropTypes.number,\n    numRow: PropTypes.number,\n};\n"]},"metadata":{},"sourceType":"module"}